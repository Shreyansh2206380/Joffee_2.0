package interfaces;

interface Bicycle{
    int a = 45;
    void applyBrake(int decrement); //bydeafult abstrat
    void speedUp(int increment); //no need to write abstract 
}

interface HornBicycle{
    int x = 45;
    void blowHorn2();
    void blowHorn3();
}

class AvonCycle implements Bicycle, HornBicycle{
    //public int x = 5;
    void blowHorn(){
        System.out.println("beep");
    }
    public void applyBrake(int decrement){
        System.out.println("Applying Brake");
    }
    public void speedUp(int increment){
        System.out.println("Applying SpeedUP");
    }
    public void blowHorn2(){
        System.out.println("beep beep");
    }
    public void blowHorn3(){
        System.out.println("Beep beep beep ");
    }
}
public class inter {
    public static void main(String[] args) {
        AvonCycle cycleHarry = new AvonCycle();
        cycleHarry.applyBrake(1);
        // You can create properties in Interfaces
        System.out.println(cycleHarry.a);
        System.out.println(cycleHarry.x);

        // You cannot modify the properties in Interfaces as they are final
        // cycleHarry.a = 454;
        //System.out.println(cycleHarry.a);

        cycleHarry.blowHorn2();
        cycleHarry.blowHorn3();
    }
}
